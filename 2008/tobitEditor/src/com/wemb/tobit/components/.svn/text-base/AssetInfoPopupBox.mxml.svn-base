<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="assetChange",type="com.wemb.tobit.event.AssetEditEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.wemb.tobit.utils.CSSUtil;
			import com.wemb.tobit.factory.TobitSymbolTypeDefinition;
			import com.wemb.tobit.vo.AssetInfo;
			import com.wemb.tobit.vo.TobitItem;
			
			import mx.collections.ArrayCollection;
			
			//-------------------------------------------
			// Variables
			//-------------------------------------------
			private var _tobitItem:TobitItem;
			private var _assetInfo:AssetInfo;
			
			[Bindable]
			private var b_msg:Boolean = true;		// 장비가 없을 경우 나타나는 에러메시지
			
			
			//-------------------------------------------------
			// Setter / Getter 
			//-------------------------------------------------
			
			public function set assetInfo(value:AssetInfo):void
			{
				try
				{					
					//symbol_box.removeAllChildren();
					b_msg = true;
					
					if( value )
					{					
						this._assetInfo = value;
						b_msg = false;
					}
				}
				catch(e:Error)
				{
					trace("AssetInfoPopupBox", "assetInfo setter Error", e.message );
				}
			}
			
			public function onRemove():void{
				assetInfo = new AssetInfo();
				symbol_box.removeAllElements();
				remove()
			}
			
			public function remove():void{
				b_msg = true;				
			}
			
			[Bindable]
			public function get assetInfo():AssetInfo
			{
				if( !this._assetInfo )
					this._assetInfo = new AssetInfo();
				
				return this._assetInfo;
			}
			
			private var _icon:String;
			
			private var _host_name:String;
			private var _symbol:TobitSymbol;
			public function setIcon(icon:String, severity:String, host_name:String):void{
				this._icon = icon;
				this._host_name = host_name;
				symbol_box.removeAllElements();
				
				_symbol = new TobitSymbol();
				_symbol["symbolName"] = CSSUtil.GetCSSResource("TobitMapSymbols", icon);
				_symbol["type"] = TobitSymbolTypeDefinition.getInstance().getTobitSymbolType(icon);
				
				symbol_box.addChild(_symbol);
				
				var obj:Object = new Object();
				obj.severity = severity;
				_symbol.symbolValue = obj;
				
			}
			
			public function set severity(sev:String):void{
				var obj:Object = new Object();
				obj.severity = sev;
				try{
					_symbol.symbolValue = obj;
				} catch(err:Error){}
			}
			
			public function get host_name():String{
				return 	_host_name;
			}
			
			
			private function editBtnHandler(e:MouseEvent):void{
				
				/* var editFlag:Boolean = editBtn.toggle;
				
				if(editFlag == true){
					editBtn.label="Save";
					txtInputEnabled(editFlag);	
					
				}else{
					saveAssetInfo();
					editBtn.label="Edit";
					
					txtInputEnabled(editFlag);
				} 				
				editBtn.toggle = !editFlag; */
			}
			
			
			private function txtInputEnabled(flag:Boolean):void{				
				
				for(var i:int=0; i<14; i++){					
					TextInput(this["txtInput"+i]).enabled = flag;
				}
				
			}
			
			
			private function saveAssetInfo():void{
				
				/* var asset:AssetInfo = new AssetInfo();
				asset.madeIn = txtInput0.text;
				asset.model = txtInput1.text;
				asset.cpuSpeed = txtInput2.text;
				asset.cpuCnt = txtInput3.text;
				asset.cpu_type = txtInput4.text;
				asset.memorySize = txtInput5.text;
				asset.osVersion = txtInput6.text;
				asset.osPatchVer = txtInput7.text;
				asset.osFirmVer = txtInput8.text;
				asset.osKernel = txtInput9.text;
				asset.swap_size = txtInput10.text;
				asset.default_gateway = txtInput11.text;
				asset.hostName = txtHostName.text;
				asset.person_name = txtInput12.text;
				asset.person_phone = txtInput13.text;
				
				dispatchEvent(new AssetEditEvent(AssetEditEvent.ASSET_CHANGE_EVENT,asset));
				
				trace("save data"); */
				
				
				
			}
		]]>
	</fx:Script>
	<s:HGroup width="100%">
		<s:HGroup width="200" height="208" id="symbol_box"
				  horizontalAlign="center" verticalAlign="middle">
			
		</s:HGroup>
		<!--호스트명-->
		<s:VGroup width="100%" gap="4">
			<s:HGroup width="100%" paddingRight="10">
				<s:Label width="100%" text="{assetInfo.label}" paddingTop="4" paddingLeft="20"
						 textAlign="left"/>
				<s:Spacer width="100%"/>
				<s:Button id="editBtn" label="edit" click="editBtnHandler(event)"/>
			</s:HGroup>
			
			<s:HGroup width="100%" height="100%" gap="7">
				<s:VGroup width="100%" height="100%" gap="9">
					
					<s:HGroup width="100%">
						<s:Label text="그룹명" width="143" paddingLeft="12"/>
						<s:Label text="" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="호스트명" width="143" paddingLeft="12"/>
						<s:Label text="{assetInfo.hostname}" id="txtHostName" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="호스트명(영문)" width="143" paddingLeft="12"/>
						<s:Label text="" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="대표IP" width="143" paddingLeft="12"/>
						<s:Label text="{assetInfo.ip}" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="기종" width="143" paddingLeft="12"/>
						<s:TextInput text="" id="txtInput0" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="모델명" width="143" paddingLeft="12"/>
						<s:TextInput text="{assetInfo.model}" id="txtInput1" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
				</s:VGroup>
				
				<s:VGroup width="100%" height="100%" gap="9">
					
					<s:HGroup width="100%">
						<s:Label text="CPU 속도" width="143" paddingLeft="12"/>
						<s:TextInput text="{assetInfo.cpuspeed}" id="txtInput2" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="CPU 수" width="143" paddingLeft="12"/>
						<s:TextInput text="{assetInfo.cpucount}" id="txtInput3" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="CPU 타입" width="143" paddingLeft="12"/>
						<s:TextInput text="" id="txtInput4" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="메모리" width="143" paddingLeft="12"/>
						<s:TextInput text="" id="txtInput5" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="os명" width="143" paddingLeft="12"/>
						<s:TextInput text="{assetInfo.osversion}" id="txtInput6" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="os패치" width="143" paddingLeft="12"/>
						<s:TextInput text="" id="txtInput7" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
				</s:VGroup>
				
				<s:VGroup width="100%" height="100%" gap="9">
					<s:HGroup width="100%">
						<s:Label text="Firm버전" width="143" paddingLeft="12"/>
						<s:TextInput text="" id="txtInput8" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="커널bit" width="143" paddingLeft="12"/>
						<s:TextInput text="" id="txtInput9" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="스왑총량" width="143" paddingLeft="12"/>
						<s:TextInput text="{assetInfo.swap}" id="txtInput10" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="디폴트 게이트웨이" width="143" paddingLeft="12"/>
						<s:TextInput text="" id="txtInput11" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="담당자 이름" width="143" paddingLeft="12"/>
						<s:TextInput text="" id="txtInput12" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
					<s:HGroup width="100%">
						<s:Label text="담당자 연락" width="143" paddingLeft="12"/>
						<s:TextInput text="" id="txtInput13" enabled="false" height="16" width="138"/>
					</s:HGroup>
					
				</s:VGroup>
			</s:HGroup>
			
		</s:VGroup>
	</s:HGroup>
</s:Group>
