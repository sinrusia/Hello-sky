<?xml version="1.0" encoding="utf-8"?>
<XPopup xmlns="com.wemb.tobit.pure.view.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:wemb="http://www.wemb.co.kr/2009/mxml"
	xmlns:panels="com.wemb.tobit.components.panels.*"
	width="550" height="550">

	<mx:Script>
	<![CDATA[
				
		import mx.events.CloseEvent;
		import mx.managers.PopUpManager;
		import mx.utils.ObjectUtil;
		import mx.utils.StringUtil;
		import mx.controls.Alert;
		import mx.collections.ArrayCollection;
		import org.puremvc.as3.interfaces.INotification;
		import com.wemb.tobit.vo.Request;
		import com.wemb.tobit.pure.Constants;
		
		public var cbFunction:Function;
		
		private var isRegister:Boolean = false;
		private var isComplete:Boolean = false;
		
		override public function onRegister():void
		{
			super.onRegister();
			isRegister = true;
			onStart();
		}

		override public function listNotificationInterests():Array
		{
			return [
					Constants.GET_HOST_BY_LEVEL2_GROUP
			];
		}
		
		override public function handleNotification(notification:INotification):void
		{
			switch(notification.getName())
			{
				case Constants.GET_HOST_BY_LEVEL2_GROUP:
					rs_getHostByLevel2Group(notification.getBody() as Request);
				break;
			}
		}
		
		private var search_ip:String = "All";
		private var search_host:String = "All";
		private function getHostByLevel2Group():void
		{
			facade.sendTobitService( Constants.GET_HOST_BY_LEVEL2_GROUP, {"lev2_gid":selectedGroup, "ip":search_ip, "host_name":search_host, "val_type":_rt_type, "key":this.name} );
			//trace("facade.sendTobitService");
		}

		private function closeEvent():void
		{
			closeBtnEvent();
		}
		
		[Bindable]public var sys_cnt:Number = 6;			// 선택가능 시스템 개수
		[Bindable]public var all_selected:Boolean = true;	// 전체선택	
		[Bindable]private var system_ac:ArrayCollection;	// 시스템  AC		
		[Bindable]private var group_ac:ArrayCollection;		// 그룹 AC		
		[Bindable]private var selected_ac:ArrayCollection;	// 선택한 시스템  AC
		
		public var selectedGroup:String = "All";	// 선택 그룹		
		private var selectedIndex:String;			// 선택 그룹 so index		
		private var selectedLabel:String;			// 선택 그룹		
		private var selectedType:String;				// 선택 그룹		
		private var selectedHostNames:String = "";	// 선택한 시스템들		
		private var selectedHostLabels:String = "";		
		private var selectedHostIPs:String = "";		// 선택 IP
		
		private var _rt_type:String = "pim";
		public function set rt_type(value:String):void
		{
			_rt_type = value;
		}
		
		public function set groups(ac:ArrayCollection):void
		{
			group_ac = ObjectUtil.copy(ac) as ArrayCollection;
		}
		
		private function onComplete():void
		{
			isComplete = true;
			onStart();
		}
		
		private function onStart():void
		{
			if ( isRegister && isComplete )
			{
				if ( selectedGroup == "All" )
				{
					group_ac.addItemAt({group_id:"All", group_name:"All"}, 0);
					group_cb.selectedIndex = 0;
				}
				else
				{
					for( var i:int; i<group_ac.length; i++)
					{
						if ( selectedGroup == group_ac.getItemAt(i).group_id )
						{
							group_cb.selectedIndex = i;
							break;
						}
					}
				}
				
				getHostByLevel2Group();
			}
		}
		
		private function rs_getHostByLevel2Group(request:Request):void
		{
			if ( request.param["key"] != this.name ) return;
			
			if(request.result is Array) {
				system_ac = new ArrayCollection(request.result as Array);
			} else {
				system_ac = request.result as ArrayCollection;
			}
			
			datagrid.dataProvider = system_ac;
		}
		
		private function submit():void
		{
			selected_ac = new ArrayCollection();
			selectedGroup = group_cb.selectedItem.group_id;
			selectedLabel = group_cb.selectedItem.group_name;
			selectedType = group_cb.selectedItem.rt_type;
			
			selectedHostIPs = "";
			selectedHostNames = "";
			selectedHostLabels = "";
			var selected_cnt:Number = 0;
			
			for(var i:int=0; i<system_ac.length; i++)
			{
				if ( system_ac.getItemAt(i).select_yn == "Y" )
				{
					selected_cnt++;
					if ( selected_cnt > sys_cnt )
					{
						Alert.show( sys_cnt + "개까지 선택 가능합니다.");
						return;
					}
					
					selected_ac.addItem(system_ac.getItemAt(i));
					
					if ( selectedHostNames == "" ) 
					{
						selectedHostNames = system_ac.getItemAt(i).host_name;
						selectedHostLabels = system_ac.getItemAt(i).host_label;
						selectedHostIPs = system_ac.getItemAt(i).host_ip;
					}
					else
					{
						selectedHostNames += "," + system_ac.getItemAt(i).host_name;
						selectedHostLabels += "," + system_ac.getItemAt(i).host_label;
						selectedHostIPs += "," + system_ac.getItemAt(i).host_ip;
					}
				}
			}
			
			if ( selected_cnt == 0 ) 
			{
				Alert.show("시스템을 선택하세요.");
			}
			else
			{
				var object:Object = new Object();
				object.selectedGroup = selectedGroup;
				object.selectedLabel = selectedLabel;
				object.selectedType = selectedType;
				object.selectedHostIPs = selectedHostIPs;
				object.selectedHostNames = selectedHostNames;
				object.selectedHostLabels = selectedHostLabels;				
				cbFunction(object);
				closeEvent();
			}
		}
		
		private function groupChangeHandler(event:Event):void
		{
			all_selected = true;
			selectedGroup = event.currentTarget.selectedLabel;
			search_host = "All"
			search_ip = "All"
			host_ti.text = "";
			ip_ti.text = "";
			/* search_host = StringUtil.trim(host_ti.text);
			if ( search_host == "" ) search_host = "All";
			
			search_ip = StringUtil.trim(ip_ti.text);
			if ( search_ip == "" ) search_ip = "All"; */
			
			getHostByLevel2Group();
		}
		
		/*******************************************************************************************************************
		/* 전체 선택
		/*******************************************************************************************************************/
		public function headerClickHandler():void 
		{
			var select_yn:String = "N";
			if ( all_selected ) select_yn = "Y";
		   	for( var i:int; i<system_ac.length; i++)
		   	{
		   		system_ac.getItemAt(i).select_yn = select_yn;
		   		system_ac.itemUpdated(system_ac.getItemAt(i));
		   	}
			all_selected = !all_selected;
		}
		
		private function enterHandler():void
		{
			all_selected = true;
			group_cb.selectedIndex = 0;
			selectedGroup = "All";//group_cb.selectedLabel;
			
			search_ip = StringUtil.trim(ip_ti.text);
			if ( search_ip == "" ) search_ip = "All";
			
			search_host = StringUtil.trim(host_ti.text);
			if ( search_host == "" ) search_host = "All";
			
			getHostByLevel2Group();
		}

	]]>
	</mx:Script>
	
	<panels:TobitPopup width="100%" height="100%" title="작업 캘린더">
	
		<mx:VBox width="100%" height="100%" verticalGap="10">
			
			<mx:HBox width="100%" verticalAlign="middle" horizontalGap="0" horizontalAlign="right">
				<mx:Label text="노드그룹 :" truncateToFit="false"/>
				<mx:ComboBox id="group_cb" dataProvider="{group_ac}" width="150" labelField="group_id" rowCount="10"
					change="groupChangeHandler(event);"/>
			</mx:HBox>
			
			<mx:HBox width="100%" verticalAlign="middle" horizontalGap="0" horizontalAlign="right">
				<mx:Label text="대표IP :" truncateToFit="false"/>
				<mx:TextInput id="ip_ti" width="100%" restrict="0-9." enter="enterHandler();"/>
				<mx:Spacer width="10"/>
				<mx:Label text="호스트명 :" truncateToFit="false"/>
				<mx:TextInput id="host_ti" width="100%" enter="enterHandler();"/>
				<mx:Spacer width="10"/>
				<mx:Button buttonMode="true" label="조회" click="enterHandler()" />
			</mx:HBox>
			
			<mx:DataGrid id="datagrid" width="100%" height="100%" headerHeight="23" 
				dataProvider="{system_ac}"
				headerBackgroundSkin="com.wemb.tobit.components.datagrid.CustomDataGridHeaderBackgroundSkin"
				creationComplete="onComplete()">
				<mx:columns>
					<mx:DataGridColumn headerText="선택" dataField="select_yn" width="45" sortable="false"
						itemRenderer="com.wemb.tobit.renderers.CheckBoxItemRenderer">
						<mx:headerRenderer>
							<mx:Component>
								<mx:Canvas width="100%" horizontalScrollPolicy="off">
									<mx:CheckBox x="15" y="1"
										click="outerDocument.headerClickHandler()" selected="{!outerDocument.all_selected}"/>
								</mx:Canvas>
							</mx:Component>
						</mx:headerRenderer>
					</mx:DataGridColumn>
					<mx:DataGridColumn headerText="노드그룹" dataField="group_id" width="120"/>
					<mx:DataGridColumn headerText="호스트명" dataField="host_name"/>
					<mx:DataGridColumn headerText="대표IP" dataField="host_ip" width="130"/>
				</mx:columns>
			</mx:DataGrid>
			
			<mx:Image source="@Embed('assets/common/pop_dvLine.png')" width="100%" scaleContent="true" maintainAspectRatio="false"/>
			
			<mx:HBox width="100%" horizontalAlign="right" horizontalGap="5">
				<mx:Button buttonMode="true" label="확인" click="submit()" />
				<mx:Button buttonMode="true" label="취소" click="closeEvent()" />
			</mx:HBox>
			
		</mx:VBox>
			
	</panels:TobitPopup>

</XPopup>
