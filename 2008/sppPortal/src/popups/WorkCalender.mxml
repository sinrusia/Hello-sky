<?xml version="1.0" encoding="utf-8"?>
<XPopup xmlns="com.wemb.tobit.pure.view.*" 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:panels="com.wemb.tobit.components.panels.*"
	xmlns:main="com.wemb.tobit.components.main.*"
	width="550" height="500"
	horizontalScrollPolicy="off" verticalScrollPolicy="off"
	fontSize="12"
	creationComplete="onComplete()">
	
	<mx:Script>
		<![CDATA[
			import mx.events.FlexEvent;			
			
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;		
			import mx.formatters.Formatter;		
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import org.puremvc.as3.interfaces.INotification;
			import caurina.transitions.Tweener;
			import com.wemb.tobit.vo.Request;
			import com.wemb.tobit.vo.WorkingInfo;
			import com.wemb.tobit.vo.ServerTime;
			import com.wemb.tobit.pure.Constants;
			import com.wemb.tobit.components.main.Label_CalenderList;
			import com.wemb.tobit.core.ApplicationConfig;
			import com.wemb.tobit.utils.CustomStringUtil;
			
			public var cbFunction:Function;
			
			private var isRegister:Boolean = false;
			private var isComplete:Boolean = false;
			
			[Bindable]private var dayArr:Array;		
			[Bindable]private var _year:String;		
			[Bindable]private var _month:String;		
			[Bindable]private var _date:String;		
			[Bindable]private var _syear:Number;		
			[Bindable]private var _smonth:Number;		
			[Bindable]private var _sdate:Number;		
			[Bindable]private var nowDate:Date;
			
			[Bindable]private var working:WorkingInfo;			
			
			//5row, 6row 가 다르기 때문에 for문 돌리는 수
			private var loopCnt:Number = 0;
			
			private var firstDay:Number = 0;
			
			private var _defaultLabelColor:Number = 0x939393;
			private var _todayLabelColor:Number = 0x939393;
			private var _sundayLabelColor:Number = 0x939393;
			private var _saturdayLabelColor:Number = 0x939393;
			private var _disabledayLabelColor:Number = 0xc8c8c8;
			
			private var _defaultBackgroundColor:Number = 0xffffff;
			private var _selectedBackgroundColor:Number = 0xffe400;
			private var _todayBackgroundColor:Number = 0x66ff99;
			private var _disabledayBackgroundColor:Number = 0xf0f0f0;
			
			private var isInit:Boolean = false;
			
			private var _calBgHeight:Number = 380;
			private var _workId:String;		
			private var daily_ac:ArrayCollection;
			private var selectedRenderer:Renderer_CalenderDay;
			
			/* [Bindable]private var _detailStartDate:Date;
		 	[Bindable]private var _detailStartTime:Number;
		 	[Bindable]private var _detailStartMinute:Number;
		 	[Bindable]private var _detailEndDate:Date;
		 	[Bindable]private var _detailEndTime:Number;
		 	[Bindable]private var _detailEndMinute:Number; */
			
			override public function onRegister():void
			{
				super.onRegister();
				isRegister = true;
				onStart();
			}		
			private function onComplete():void
			{
				isComplete = true;
				onStart();
			}		
			private function onStart():void
			{
				if ( isRegister && isComplete )
				{
					var date:String = ServerTime.getInstance().serverTime;
					nowDate = new Date(date.substr(0,4), Number(date.substr(5,2))-1, date.substr(8,2));
				
					_syear = nowDate.getFullYear();
					_smonth = nowDate.getMonth();
					_sdate = nowDate.getDate();
					
					titledate.text = labelDF.format(nowDate);
					
					dayArr = new Array();			
					dayArr[0]=day0; dayArr[1]=day1; dayArr[2]=day2; dayArr[3]=day3; dayArr[4]=day4; 
					dayArr[5]=day5; dayArr[6]=day6; dayArr[7]=day7; dayArr[8]=day8; dayArr[9]=day9; 
					dayArr[10]=day10; dayArr[11]=day11; dayArr[12]=day12; dayArr[13]=day13; dayArr[14]=day14; 
					dayArr[15]=day15; dayArr[16]=day16; dayArr[17]=day17; dayArr[18]=day18; dayArr[19]=day19; 
					dayArr[20]=day20; dayArr[21]=day21; dayArr[22]=day22; dayArr[23]=day23; dayArr[24]=day24; 
					dayArr[25]=day25; dayArr[26]=day26; dayArr[27]=day27; dayArr[28]=day28; dayArr[29]=day29; 
					dayArr[30]=day30; dayArr[31]=day31; dayArr[32]=day32; dayArr[33]=day33; dayArr[34]=day34;
					dayArr[35]=day35; dayArr[36]=day36; dayArr[37]=day37; dayArr[38]=day38; dayArr[39]=day39; 	
					dayArr[40]=day40; dayArr[41]=day41;
					
					setCalendar(-1, -1);
					
					var param:Object = new Object();
					param.company = ApplicationConfig.getInstance().userInfo.companyCode;
					param.startdate = date.substr(0,4) + date.substr(5,2) + date.substr(8,2) + "000000";
					param.enddate = date.substr(0,4) + date.substr(5,2) + date.substr(8,2) + "235959";
					 
					facade.sendTobitService(Constants.GET_TODAYWORK_LIST, param, false);
					
					isInit = true;
					
					if ( viewstack.selectedIndex == 2 && !working )
						facade.sendTobitService(Constants.GET_WORK_DETAIL, {workId:_workId}, false);
				}
			}		
			override public function listNotificationInterests():Array
			{
				return [
						Constants.GET_TODAYWORK_LIST,
						Constants.GET_WORK_DETAIL,
						Constants.GET_MONTHLY_CNT
				];
			}		
			override public function handleNotification(notification:INotification):void
			{
				switch(notification.getName())
				{
					case Constants.GET_TODAYWORK_LIST:
						rs_getTodayWorkList(notification.getBody() as Request);
					break;
					case Constants.GET_WORK_DETAIL:
						rs_getWorkDetail(notification.getBody() as Request);
					break;
					case Constants.GET_MONTHLY_CNT:
						rs_getMonthlyCnt(notification.getBody() as Request);
					break;
				}
			}
	
			private function closeEvent():void
			{
				closeBtnEvent();
			}		
			
			public function set workId(value:String):void
			{
				if ( value != null )
				{	
					_workId = value;
					viewstackChangeHandler(2);
				}
				else
				{
					viewstackChangeHandler(0);
				}
			}
			
			private function rs_getTodayWorkList( request:Request ):void
			{
				if(request.result is Array) daily_ac = new ArrayCollection(request.result as Array);
				else daily_ac = request.result as ArrayCollection;
				
				createWorkList();
		 	}
		 		 	
		 	private function rs_getWorkDetail( request:Request ):void
			{
				working = request.result as WorkingInfo;
				
				var stemp:String = working.startDate;
				var etemp:String = working.endDate;
				
				sdate.selectedDate = new Date(stemp.substr(0,4), Number(stemp.substr(4,2))-1, stemp.substr(6,2));
				stime.value = Number(stemp.substr(8,2));
				sminute.value = Number(stemp.substr(10,2));
				edate.selectedDate = new Date(etemp.substr(0,4), Number(etemp.substr(4,2))-1, etemp.substr(6,2));
				etime.value = Number(etemp.substr(8,2));
				eminute.value = Number(etemp.substr(10,2));
		 	}
		 	
		 	private function rs_getMonthlyCnt( request:Request ):void
			{
				var temp_ac:ArrayCollection;
	  			if(request.result is Array) temp_ac = new ArrayCollection(request.result as Array);
				else temp_ac = request.result as ArrayCollection;
	  			
  				for( var i:int=0; i<temp_ac.length; i++)
  				{
  					var date:Number = Number(temp_ac.getItemAt(i).sdate)+firstDay-1;
  					dayArr[date].cnt = temp_ac.getItemAt(i).cnt;
  				}
		 	}
		 	
		 	private function createWorkList():void
			{
				removeWorkList();

				if ( daily_ac.length > 0 )
				{
					for( var i:int; i<daily_ac.length; i++)
					{
						var work:Label_CalenderList = new Label_CalenderList();
						work.workId = WorkingInfo(daily_ac.getItemAt(i)).id;
						var startdate:String = WorkingInfo(daily_ac.getItemAt(i)).startDate;
						var enddate:String = WorkingInfo(daily_ac.getItemAt(i)).endDate;
						work.text = "[" + startdate.substr(8,2) + ":" + startdate.substr(10,2) + "~" + 
									enddate.substr(8,2) + ":" + enddate.substr(10,2) + "] " + 
									WorkingInfo(daily_ac.getItemAt(i)).title;
						work.width = 480;
						work.addEventListener(MouseEvent.CLICK, detailWork);
						work.addEventListener(FlexEvent.CREATION_COMPLETE, workCreateComplete);
						list_box.addChild(work);
					}
				}
				else
				{
					var temp:Label_CalenderList = new Label_CalenderList();
					temp.text = "작업 내역이 없습니다.";
					list_box.addChild(temp);
				}
			}
			
			private var create_cnt:int = 0;
			private function workCreateComplete(event:FlexEvent):void
			{
				if ( daily_ac.length > 0 )
				{
					if ( create_cnt++ == daily_ac.length )
					{
						callLater(calenderBgResize);
					}
				}
				else
				{
					if ( create_cnt++ == 1 )
					{
						callLater(calenderBgResize);
					}
				}
				
			}
			
			private function detailWork(event:MouseEvent):void
			{
				_workId = event.currentTarget.workId;
				viewstackChangeHandler(2);
			}
			
			public function changeHandler(type:String=null):void
			{
				if ( !isInit) return;
				
				removeWorkList();
				
				if ( type == "prevyear" )
				{
					_syear--;
				}
				else if ( type == "nextyear" )
				{
					_syear++;
				}
				else if ( type == "prevmonth" )
				{
					if ( _smonth == 0 )
					{
						_syear--;
						_smonth = 11;
					}
					else
					{
						_smonth--;
					}
				}
				else if ( type == "nextmonth" )
				{
					if ( _smonth == 11 )
					{
						_syear++;
						_smonth = 0;
					}
					else
					{
						_smonth++;
					}
				}
				
				clearScheduleRenderer();
				setCalendar(_syear, _smonth);
				
				titledate.text = labelDF.format(new Date(_syear, _smonth));
			}
	
			public function setCalendar(inputYear:Number, inputMonth:Number):void 
			{
				var nowYear:Number  = nowDate.getFullYear();
				var nowMonth:Number = nowDate.getMonth();
				var nowDay:Number   = nowDate.getDate();
				
				if(inputYear > 0)
				{ 
					nowYear = inputYear;
				} 
				else 
				{
					/* for( var j:int=0; j<year_ac.length; j++)
					{
						if ( nowYear == year_ac.getItemAt(j).data )
						{
							yearCombo.selectedIndex = j;
							break;
						}
					} */
				}
				
				if(inputMonth >= 0)
				{
					nowMonth = inputMonth;
				}
				else
				{
					//monthCombo.selectedIndex = nowMonth;
				}
		
				firstDay = new Date(nowYear, nowMonth, 1).getDay(); 		//첫 요일
				var lastDay:Number = new Date(nowYear, nowMonth + 1, 0).getDay();	//끝 요일
				
				var monthDateCount:Number = getDayCount( nowYear, nowMonth );
				
				var today1:String = (nowDate.getMonth()+1) + "/" + nowDay + "/" + nowDate.getFullYear();
				var today2:String = (nowDate.getMonth()+1) + "/" + (nowDay+firstDay) + "/" + nowDate.getFullYear();
				
				var i:Number=0;
				var dayCount:Number = 1;
				var nextDayCount:Number = 1;
				
				//달력의 Row가 몇줄인지 계산해서 4이하면 lastRow 숨김
				var hideFlag:Number = (monthDateCount - (7-firstDay)) / 7;
				
				if( hideFlag <= 4 )
				{
					currentState = '5row';
					loopCnt = 35
				}
				else
				{
					currentState = '6row';
					loopCnt = 42;
				}
				
				if( firstDay == 0 )		//firstDay값부터 '1'일로 세팅
				{			
					for( i=0; i<loopCnt; i++ )
					{
						if( i<monthDateCount )
						{
							//현재달
							dayArr[i].title.text= i + 1;
							
							//일요일, 토요일은 날짜색 다르게
							if( i%7 == 0 ) dayArr[i].title.setStyle("color", _sundayLabelColor);	//일요일
							else if( i%7 == 6 ) dayArr[i].title.setStyle("color", _saturdayLabelColor);	//토요일
							else dayArr[i].title.setStyle("color", _defaultLabelColor);
							
							//var temp:String = (Number(monthCombo.selectedItem.data)+1).toString() +'/'+ (i+1)+'/'+ yearCombo.selectedItem.data;
							var temp:String = (_smonth+1).toString() +'/'+ (i+1)+'/'+ _syear;
							
							//오늘 색상변경
							if( today1 == temp )
							{
								dayArr[i].title.setStyle("color", _todayLabelColor);
								dayArr[i].setStyle("backgroundColor", _todayBackgroundColor);
								selectedRenderer = dayArr[i] as Renderer_CalenderDay;
							}
							else
							{
								dayArr[i].setStyle("backgroundColor", _defaultBackgroundColor);
							}						
							
							dayArr[i].thisDay = i + 1; // 날짜값 세팅
							dayArr[i].thisMonth = nowMonth+1; // 날짜값 세팅
							dayArr[i].thisYear = nowYear; // 날짜값 세팅
						}
						else
						{
							//다음 달의 값으로...
							dayArr[i].title.text = nextDayCount;
							dayArr[i].title.setStyle("color", _disabledayLabelColor);
							dayArr[i].setStyle("backgroundColor", _disabledayBackgroundColor);
							dayArr[i].thisDay = nextDayCount; // 날짜값 세팅
							
							if( nowMonth == 11 )
							{
								dayArr[i].thisMonth = 1; // 날짜값 세팅
								dayArr[i].thisYear = nowYear+1; // 날짜값 세팅																																	
							}
							else
							{
								dayArr[i].thisMonth = nowMonth+2; // 날짜값 세팅
								dayArr[i].thisYear = nowYear; // 날짜값 세팅
							}
							nextDayCount++;
						}
					}
				}
				else
				{
					//firstDay값이 0이 아니라면 첫번째 칸은 이전 달이 되며 역산함 : firstDay값이 5라면(금요일) 첫번째 칸은 이전 달의 뒤에서 5번째 날 (2005년4월)
					var beforeDayCount:Number = new Date(nowYear, nowMonth, 0).getDate() - firstDay + 1;
					
					for( i=0; i<=(monthDateCount-firstDay+1); i++ )
					{
						//이전달
						dayArr[i].title.text= beforeDayCount;
						dayArr[i].title.setStyle("color", _disabledayLabelColor);
						dayArr[i].setStyle("backgroundColor", _disabledayBackgroundColor);
						dayArr[i].thisDay = beforeDayCount; // 날짜값 세팅	
	
						if( nowMonth == 0 )
						{
							dayArr[i].thisMonth = 12; // 날짜값 세팅
							dayArr[i].thisYear = nowYear-1; // 날짜값 세팅	
						}
						else
						{
							dayArr[i].thisMonth = nowMonth; // 날짜값 세팅		
							dayArr[i].thisYear = nowYear; // 날짜값 세팅																																	
						}													
						beforeDayCount++;
					}
					for( i=firstDay; i<loopCnt; i++ )
					{
						if( i<monthDateCount+firstDay )
						{
							//현재달
							dayArr[i].title.text= dayCount;
							dayArr[i].thisDay= dayCount; // 날짜값 세팅		
							dayArr[i].thisMonth= nowMonth+1; // 날짜값 세팅						
							dayArr[i].thisYear= nowYear; // 날짜값 세팅		
																																
							//일요일, 토요일은 날짜색 다르게
							if( i%7 == 0 ) dayArr[i].title.setStyle("color", _sundayLabelColor);	//일요일
							else if( i%7 == 6 ) dayArr[i].title.setStyle("color", _saturdayLabelColor);	//토요일
							else dayArr[i].title.setStyle("color", _defaultLabelColor);
							
							//오늘 색상변경
							//if( today2 == (Number(monthCombo.selectedItem.data)+1).toString() +'/'+ (i+1)+'/'+ yearCombo.selectedItem.data )
							if( today2 == (_smonth+1).toString() +'/'+ (i+1)+'/'+ _syear )
							{
								dayArr[i].title.setStyle("color", _todayLabelColor);
								dayArr[i].setStyle("backgroundColor", _todayBackgroundColor);
							}
							else
							{
								dayArr[i].setStyle("backgroundColor", _defaultBackgroundColor);
							}
							
							dayCount++;
						}
						else	//다음 달의 값으로...
						{
							dayArr[i].title.text = nextDayCount;
							dayArr[i].thisDay = nextDayCount; // 날짜값 세팅
									
							if( nowMonth == 11 )
							{
								dayArr[i].thisMonth = 1; // 날짜값 세팅
								dayArr[i].thisYear = nowYear+1; // 날짜값 세팅																														
							}
							else
							{
								dayArr[i].thisMonth = nowMonth+2; // 날짜값 세팅
								dayArr[i].thisYear = nowYear; // 날짜값 세팅
							}
							dayArr[i].title.setStyle("color", _disabledayLabelColor);
							dayArr[i].setStyle("backgroundColor", _disabledayBackgroundColor);
							nextDayCount++;
						}
					}
				}
				
				// 월간 일별 건수 가져오기
				var param:Object = new Object();
				param.month = nowYear + CustomStringUtil.getTenSpace((nowMonth+1).toString());
				facade.sendTobitService(Constants.GET_MONTHLY_CNT, param, false);
				
				callLater(calenderBgResize);
			}
			
			private function clearScheduleRenderer():void
			{
				for( var i:int=0; i<dayArr.length; i++ )
				{
					//날짜
					dayArr[i].title.text = "";
					dayArr[i].cnt = 0;
					//selectedRenderer = null;
				}
			}
			
			//이번달의 날짜수 확인
			private function getDayCount( _year:Number, _month:Number ):Number
			{
				var tempDate:Date = new Date( _year, _month+1 );
				return tempDate.dateUTC;
			}
	  		
	  		/**
	  		 * getWorkPlanData_rs
	  		 *  - RemoteObject Result Event
	  		 *  - 해당월의 근무 데이터를 파싱 및 해달날짜에 셋팅
	  		 */
	  		/* private function getWorkPlanData_rs(event:ResultEvent):void
	  		{			
	  			if( event.result != null )
	  			{ 
	  				var temp_ac:ArrayCollection = event.result.result as ArrayCollection;
	  				
	  				for( var i:int=0; i<temp_ac.length; i++)
	  				{
	  					var date:Number = Number(String(temp_ac.getItemAt(i).work_date).substring(8))+firstDay-1;
	  					dayArr[date].dataProvider = temp_ac.getItemAt(i) as Object;
	  				}
	  				temp_ac = null;
	  			}
	  			event = null;
	  		} */
	  		
	  		/* public function set idx(value:int):void
	  		{
	  			viewstackChangeHandler(value);
	  		} */
	  		
	  		/**
	  		 * viewstack 이동
	  		 */
			private function viewstackChangeHandler(idx:int):void
			{
				viewstack.selectedIndex = idx;
				
				if ( viewstack.selectedIndex == 0 ) 
				{
					popup.title = "작업 캘린더";
				}
				else if ( viewstack.selectedIndex == 1 ) 
				{
					popup.title = "작업 등록";
				}
				else 
				{
					popup.title = "작업 상세";
					if ( isRegister ) facade.sendTobitService(Constants.GET_WORK_DETAIL, {workId:_workId}, false);
				}
				callLater(calenderBgResize);
			}
			
			private function calenderBgResize():void
			{			
				if ( viewstack.selectedIndex == 0 ) 
				{
					var gridheight:Number;
					if ( currentState == "5row" ) gridheight = 25 + (5*30) + ((grid.numChildren-1)*grid.getStyle("verticalGap"));
					else gridheight = 25 + (6*30) + ((grid.numChildren-1)*grid.getStyle("verticalGap"));
					
					_calBgHeight = 77 + ((vbox.numChildren-1)*vbox.getStyle("verticalGap")) + monthclickbox.height + 
								   ((gridbox.numChildren-1)*gridbox.getStyle("verticalGap")) + gridheight + hrule.height + 
								   ((list_box.numChildren-1)*list_box.getStyle("verticalGap")) + (list_box.numChildren*20) + buttonbox.height;
					Tweener.addTween(this, { height:_calBgHeight, time:1, transition:"easeOut"});
				}
				else 
				{
					Tweener.addTween(this, { height:500, time:1, transition:"easeOut"});
				}
			}
			
			private function removeWorkList():void
			{
				create_cnt = 0;
				list_box.removeAllChildren();
			}
			
			private function dateChangeHandler(event:Event):void
			{
				if ( selectedRenderer ) selectedRenderer.setStyle("backgroundColor", _defaultBackgroundColor);
				var param:Object = new Object();
				param.company = ApplicationConfig.getInstance().userInfo.companyCode;
				
				var date_str:String = event.currentTarget.thisYear + 
									  CustomStringUtil.getTenSpace(event.currentTarget.thisMonth) + 
									  CustomStringUtil.getTenSpace(event.currentTarget.thisDay);
				param.startdate = date_str + "000000";
				param.enddate = date_str + "235959";
				
				selectedRenderer = event.currentTarget as Renderer_CalenderDay;
				selectedRenderer.setStyle("backgroundColor", _selectedBackgroundColor);
				facade.sendTobitService(Constants.GET_TODAYWORK_LIST, param, false);
			}
		]]>
	</mx:Script>
	
	<mx:Fade id="fadeIn" alphaTo="100" duration="300"/>
	<mx:Fade id="fadeOut" alphaTo="0" duration="300"/>

	<!--<mx:Binding destination="_date" 
		source="df.format((Number(monthCombo.selectedItem.data)+1).toString() +'/01/'+ yearCombo.selectedItem.data)"/>-->
	
	<!--<mx:RemoteObject id="_service" destination="workplan" fault="remoteFaultEvent(event)">
		<mx:method name="getWorkPlan" result="getWorkPlanData_rs(event)"/>
	</mx:RemoteObject>-->
	
	<!-- 
		1달의 ROW가 5줄일때와 6줄일때 2가지가 존재하므로, states로 처리
		change 이벤트로 addChild, removeChild로 할경우 너무 느려져서
		visible 로 처리함
	-->	
	<states>
		<mx:State name="6row">
			<mx:SetProperty target="{lastRow}" name="visible" value="true"/>
			<mx:SetProperty target="{lastRow}" name="height" value="30"/>
		</mx:State>		
		<mx:State name="5row">
			<mx:SetProperty target="{lastRow}" name="visible" value="false"/>
			<mx:SetProperty target="{lastRow}" name="height" value="0"/>
		</mx:State>
	</states>
	
	<transitions>
		<mx:Transition fromState="*" toState="*">
			<mx:Sequence>
				<!--<mx:Fade id="fadeOut" target="{targetImage}"
					duration="200" alphaFrom="1.0" alphaTo="0.8"/>-->
				<mx:Resize duration="300" target="{lastRow}"/>
    			<!--<mx:Fade id="wipeLeft" target="{targetImage}"
    				duration="200" alphaFrom="0.8" alphaTo="1.0"/>-->
			</mx:Sequence>
		</mx:Transition>
	</transitions>
	
	<mx:DateFormatter id="df" formatString="YYYYMM"/>
	<mx:DateFormatter id="df2" formatString="YYYYMMDD"/>
	<mx:DateFormatter id="labelDF" formatString="YYYY. MM"/>
	
	<panels:TobitPopup id="popup" width="100%" height="100%" title="작업 캘린더">
	
	<mx:ViewStack id="viewstack" width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off"
		creationPolicy="all" showEffect="{fadeIn}" hideEffect="{fadeOut}">
		
		<mx:VBox id="vbox" width="100%" height="100%"
			horizontalScrollPolicy="off" verticalScrollPolicy="off" verticalGap="5">
			
			<mx:HBox id="monthclickbox" width="100%" verticalAlign="middle" horizontalAlign="center"
				paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0"
				horizontalScrollPolicy="off" verticalScrollPolicy="off"
				horizontalGap="10">
				
				<mx:Button buttonMode="true" click="changeHandler('prevyear')" styleName="prevYearBtn"/>			
				<mx:Button buttonMode="true" click="changeHandler('prevmonth')" styleName="prevMonthBtn"/>			
				<mx:Label id="titledate" styleName="selectedMonthLabel" paddingLeft="10" paddingRight="10"/>			
				<mx:Button buttonMode="true" click="changeHandler('nextmonth')" styleName="nextMonthBtn"/>				
				<mx:Button buttonMode="true" click="changeHandler('nextyear')" styleName="nextYearBtn"/>
							
			</mx:HBox>
			
			<mx:VBox width="100%" id="gridbox" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off" verticalGap="8">
				
				<mx:Grid width="100%" id="grid" styleName="MonthlyGridItem" borderStyle="none"
					paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" horizontalGap="-1" verticalGap="-1"
					horizontalScrollPolicy="off" verticalScrollPolicy="off">
					
					<!-- 요일 그리드 -->
					<mx:GridRow id="topgridrow" width="100%" height="25" verticalAlign="middle">
						<mx:GridItem width="100%" height="100%" paddingTop="2" verticalAlign="middle" styleName="sunDayGridItem">
							<mx:Label width="100%" text="SUN" styleName="DayGridItemLabel"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" paddingTop="2" verticalAlign="middle" styleName="defaultDayGridItem">
							<mx:Label width="100%" text="MON" styleName="DayGridItemLabel"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" paddingTop="2" verticalAlign="middle" styleName="defaultDayGridItem">
							<mx:Label width="100%" text="THU" styleName="DayGridItemLabel"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" paddingTop="2" verticalAlign="middle" styleName="defaultDayGridItem">
							<mx:Label width="100%" text="WED" styleName="DayGridItemLabel"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" paddingTop="2" verticalAlign="middle" styleName="defaultDayGridItem">
							<mx:Label width="100%" text="THU" styleName="DayGridItemLabel"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" paddingTop="2" verticalAlign="middle" styleName="defaultDayGridItem">
							<mx:Label width="100%" text="FRI" styleName="DayGridItemLabel"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" paddingTop="2" verticalAlign="middle" styleName="saturDayGridItem">
							<mx:Label width="100%" text="SAT" styleName="DayGridItemLabel"/></mx:GridItem>
					</mx:GridRow>
					
					<mx:GridRow width="100%" height="30"
						paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day0"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day1"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day2"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day3"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day4"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day5"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day6"/></mx:GridItem>
					</mx:GridRow>
					<mx:GridRow width="100%" height="30"
						paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day7"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day8"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day9"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day10"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day11"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day12"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day13"/></mx:GridItem>
					</mx:GridRow>
					<mx:GridRow width="100%" height="30"
						paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day14"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day15"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day16"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day17"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day18"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day19"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day20"/></mx:GridItem>
					</mx:GridRow>
					<mx:GridRow width="100%" height="30"
						paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day21"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day22"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day23"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day24"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day25"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day26"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day27"/></mx:GridItem>
					</mx:GridRow>
					<mx:GridRow width="100%" height="30"
						paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day28"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day29"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day30"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day31"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day32"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day33"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day34"/></mx:GridItem>
					</mx:GridRow>
					
					<mx:GridRow id="lastRow" width="100%" height="30"
						paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0">
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day35"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day36"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day37"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day38"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day39"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day40"/></mx:GridItem>
						<mx:GridItem width="100%" height="100%" styleName="MonthlyGridItem">
							<main:Renderer_CalenderDay workPlanChange="dateChangeHandler(event)" id="day41"/></mx:GridItem>
					</mx:GridRow>
					
				</mx:Grid>
				
				<main:HRule_Image id="hrule" width="100%"/>
				
				<mx:VBox id="list_box" width="100%" verticalGap="-2"/>
				
				<mx:HBox id="buttonbox" width="100%" horizontalAlign="right" horizontalGap="5">
					<mx:Button label="작업 등록" buttonMode="true" click="viewstackChangeHandler(1);"/>	
				</mx:HBox>
				
			</mx:VBox>
			
		</mx:VBox>
		
		<!--작업 목록 수동 등록-->
		<mx:VBox width="100%" height="100%" paddingTop="15" paddingLeft="3"
			horizontalScrollPolicy="off" verticalScrollPolicy="off" verticalGap="5">
			
			<mx:HBox width="100%">
				<main:Label_CalenderList width="75" text="시작일시" fontWeight="bold"/>
				<mx:DateField width="140" textAlign="center" formatString="YYYY-MM-DD" buttonMode="true"/>
				<mx:Spacer width="20"/>
				<mx:NumericStepper width="55" textAlign="center" value="9" minHeight="0" maximum="23" stepSize="1" buttonMode="true"/>
				<mx:Label text="시"/>
				<mx:Spacer width="5"/>
				<mx:NumericStepper width="55" textAlign="center" value="0" minHeight="0" maximum="59" stepSize="1" buttonMode="true"/>
				<mx:Label text="분"/>
			</mx:HBox>
			
			<mx:HBox width="100%">
				<main:Label_CalenderList width="75" text="종료일시" fontWeight="bold"/>
				<mx:DateField width="140" textAlign="center" formatString="YYYY-MM-DD" buttonMode="true"/>
				<mx:Spacer width="20"/>
				<mx:NumericStepper width="55" textAlign="center" value="18" minHeight="0" maximum="23" stepSize="1" buttonMode="true"/>
				<mx:Label text="시"/>
				<mx:Spacer width="5"/>
				<mx:NumericStepper width="55"  textAlign="center" value="0" minHeight="0" maximum="59" stepSize="1" buttonMode="true"/>
				<mx:Label text="분"/>
			</mx:HBox>
			
			<mx:HBox width="100%">
				<main:Label_CalenderList width="75" text="제       목" fontWeight="bold"/>
				<mx:TextInput width="100%"/>
			</mx:HBox>
			
			<mx:HBox width="100%" height="100%" verticalAlign="top">
				<main:Label_CalenderList width="75" text="내       용" fontWeight="bold"/>
				<mx:TextArea width="100%" height="100%"/>
			</mx:HBox>
			
			<main:HRule_Image width="100%"/>
			
			<mx:HBox width="100%" horizontalAlign="right" horizontalGap="5">
				<mx:Button label="캘린더" buttonMode="true" click="viewstackChangeHandler(0);"/>
				<mx:Button label="저장" buttonMode="true" click=""/>
			</mx:HBox>
			
		</mx:VBox>
		
		<!--작업 상세 -->
		<mx:VBox width="100%" height="100%" paddingTop="15" paddingLeft="3"
			horizontalScrollPolicy="off" verticalScrollPolicy="off" verticalGap="5">
			
			<mx:HBox width="100%">
				<main:Label_CalenderList width="75" text="시작일시" fontWeight="bold"/>
				<mx:DateField id="sdate" width="140" textAlign="center" formatString="YYYY-MM-DD" editable="false"/>
				<mx:Spacer width="20"/>
				<mx:NumericStepper id="stime" width="55" textAlign="center" minHeight="0" maximum="23" stepSize="1" enabled="false"/>
				<mx:Label text="시"/>
				<mx:Spacer width="5"/>
				<mx:NumericStepper id="sminute" width="55" textAlign="center" minHeight="0" maximum="59" stepSize="1" enabled="false"/>
				<mx:Label text="분"/>
			</mx:HBox>
			
			<mx:HBox width="100%">
				<main:Label_CalenderList width="75" text="종료일시" fontWeight="bold"/>
				<mx:DateField id="edate" width="140" textAlign="center" formatString="YYYY-MM-DD" editable="false"/>
				<mx:Spacer width="20"/>
				<mx:NumericStepper id="etime" width="55" textAlign="center" minHeight="0" maximum="23" stepSize="1" enabled="false"/>
				<mx:Label text="시"/>
				<mx:Spacer width="5"/>
				<mx:NumericStepper id="eminute" width="55"  textAlign="center" minHeight="0" maximum="59" stepSize="1" enabled="false"/>
				<mx:Label text="분"/>
			</mx:HBox>
			
			<mx:HBox width="100%">
				<main:Label_CalenderList width="75" text="제       목" fontWeight="bold"/>
				<mx:TextInput width="100%" text="{working.title}" editable="false"/>
			</mx:HBox>
			
			<mx:HBox width="100%" height="100%" verticalAlign="top">
				<main:Label_CalenderList width="75" text="내       용" fontWeight="bold"/>
				<mx:TextArea width="100%" height="100%" text="{working.description}" editable="false"/>
			</mx:HBox>
			
			<main:HRule_Image width="100%"/>
			
			<mx:HBox width="100%" horizontalAlign="right" horizontalGap="5">
				<mx:Button label="캘린더" buttonMode="true" click="viewstackChangeHandler(0);"/>
			</mx:HBox>
			
		</mx:VBox>
		
		</mx:ViewStack>
	
	</panels:TobitPopup>
	
</XPopup>
