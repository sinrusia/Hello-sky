<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:labels="com.wemb.tobit.components.labels.*"
	width="100%" height="23"
	horizontalScrollPolicy="off" verticalScrollPolicy="off"
	>
	
	<mx:Script>
		<![CDATA[
			import mx.controls.Label;
			
			//-----------------------------------------------------------------
	        //
	        // Variables
	        //
	        //-----------------------------------------------------------------
			/**
			 * Title
			 */
			private var _title:String = "";
			
			/**
			 * Title Change Flag
			 */
			private var titleChanged:Boolean;
			
			/**
			 * Value
			 */
			private var _value:Number = -1;
			
			/**
			 * Value Change Flag
			 */
			private var valueChanged:Boolean;
			
			/**
			 * Value Visible Flag
			 */
			private var _valueFlag:Boolean;
			
			/**
			 * Value Flag Changed
			 */
			private var valueFlagChanged:Boolean;
			
			/**
			 * Count
			 */
			private var _count:Number = -1;
			
			/**
			 * Count Change Flag
			 */
			private var countChanged:Boolean;
			
			/**
			 * Count Label Color
			 */
			private var _color:Number = 0xffffff;
			
			/**
			 * Count Label Color Change Flag
			 */
			private var colorChanged:Boolean;
			
			/**
			 * TITLE Label Color
			 */
			private var _titleColor:Number = 0xffffff;
			
			/**
			 * TITLE Label Color Change Flag
			 */
			private var titleColorChanged:Boolean;
			
			private var _dataProvider:Object;
			
			private var dataChanged:Boolean;
			
			
			private var _fontSizeType:String = "large";
			
			private var fontSizeTypeChanged:Boolean;
			
			//-----------------------------------------------------------------
	        //
	        // Functions
	        //
	        //-----------------------------------------------------------------
			
			
			//-----------------------------------------------------------------
	        //
	        // Override
	        //
	        //-----------------------------------------------------------------
			override protected function commitProperties():void
			{
				super.commitProperties();
				
				if( dataChanged )
				{
					dataChanged = false;
					
					try{
						title = dataProvider.name;
						count = dataProvider.rate;
						
						if( valueFlag )
							value = dataProvider.summbps;
						else
							value = -1;
					}catch(error:Error){
						trace( error.message );
					}
				}
				
				if( colorChanged )
				{
					colorChanged = false;
					
					countLabel.setStyle( "color", color );
				}
				
				if( titleColorChanged )
				{
					titleColorChanged = false;
					titleLabel.setStyle( "color", titleColor );
				}
				
				if( titleChanged )
				{
					titleChanged = false;
					
					titleLabel.text = title;
				}
				
				if( valueFlagChanged )
				{
					valueFlagChanged = false;
					
					valueLabel.visible = valueFlag;
					valueUnit.visible = valueFlag;
				}
				
				if( valueChanged )
				{
					valueChanged = false;
					
					valueLabel.nowValue = value;
				}
				
				if( countChanged )
				{
					countChanged = false;
					
					countLabel.nowValue = count;
				}
				
				if( fontSizeTypeChanged )
				{
					fontSizeTypeChanged = false;
					
					if( fontSizeType == "large" )
					{
						titleLabel.setStyle( "fontSize", 16 );
						countLabel.setStyle( "fontSize", 15 );
					}
					else
					{
						titleLabel.setStyle( "fontSize", 13 );
						countLabel.setStyle( "fontSize", 13 );
					}
				}
			}
			
			//-----------------------------------------------------------------
	        //
	        // Setter / Getter
	        //
	        //-----------------------------------------------------------------
			public function set color( value:Number ):void
			{
				if( this._color != value )
				{
					this._color = value;
					
					colorChanged = true;
					invalidateProperties();
				}
			}
			
			[Bindable]
			public function get color():Number
			{
				return this._color;
			}
			
			public function set titleColor( value:Number ):void
			{
				if( this._titleColor != value )
				{
					this._titleColor = value;
					
					titleColorChanged = true;
					invalidateProperties();
				}
			}
			
			[Bindable]
			public function get titleColor():Number
			{
				return this._titleColor;
			}
			
			public function set title( value:String ):void
			{
				if( this._title != value )
				{
					this._title = value;
					
					titleChanged = true;
					invalidateProperties();
				}
			}
			
			public function get title():String
			{
				return this._title;
			}
			
			public function set valueFlag( value:Boolean ):void
			{
				if( this._valueFlag != value )
				{
					this._valueFlag = value;
					
					valueFlagChanged = true;
					invalidateProperties();
				}
			}
			
			public function get valueFlag():Boolean
			{
				return this._valueFlag;
			}
			
			public function set value( __value:Number ):void
			{
				if( this._value != __value )
				{
					this._value = __value;
					
					valueChanged = true;
					invalidateProperties();
				}
			}
			
			public function get value():Number
			{
				return this._value;
			}
			
			public function set count( value:Number ):void
			{
				if( this._count != value )
				{
					this._count = value;
					
					countChanged = true;
					invalidateProperties();
				}
			}
			
			public function get count():Number
			{
				return this._count;
			}
			
			public function set dataProvider( value:Object ):void
			{
				this._dataProvider = value;
				
				dataChanged = true;
				invalidateProperties();
			}
			
			public function get dataProvider():Object
			{
				return this._dataProvider;
			}
			
			[Inspectable(enumeration="small, large")]
			public function set fontSizeType( value:String ):void
			{
				if( this._fontSizeType != value )
				{
					this._fontSizeType = value;
					
					fontSizeTypeChanged = true;
					invalidateProperties();
				}
			}
			
			public function get fontSizeType():String
			{
				return this._fontSizeType;
			}
		]]>
	</mx:Script>
	
	<mx:NumberFormatter id="nf" useThousandsSeparator="true"/>
	
	<mx:Label id="titleLabel" x="-3" y="3" width="75"
		truncateToFit="false" 
		color="0xffffff" fontSize="12"/>
		
	<mx:HBox width="71" x="77" y="1"
		paddingLeft="0" paddingRight="0"
		horizontalAlign="left" verticalAlign="middle"
		horizontalScrollPolicy="off" verticalScrollPolicy="off">
		
		<labels:LabelCnt id="valueLabel" width="100%"
			textAlign="right" visible="false" style="trafficValueSmall"
			unitVisible="false"/>
			
	</mx:HBox>
	
	<mx:Label x="151" y="2" id="valueUnit" visible="false" text="mbps" color="0xffffff"/>
	
	<mx:HBox width="71" x="189" y="1"
		paddingLeft="0" paddingRight="0"
		horizontalAlign="left" verticalAlign="middle"
		horizontalScrollPolicy="off" verticalScrollPolicy="off">
		
		<labels:LabelCnt id="countLabel" width="100%"
			textAlign="right" style="trafficValueSmall" unitVisible="false"/>
			
	</mx:HBox>
	
	<mx:Label x="263" y="2" text="%" color="0xffffff"/>
		
</mx:Canvas>